RF SIGNALS FOR EFERGY MAINS REMOTE CONTROL SOCKETS - stephaneAG 2014

 # RF commands are sniffed using a 433Mhz receiver ( cheap 4 -pins one ) & an Espruino board
 # The following codes are fetched using picocom through the setup alias on the zenbook:
 # " stag__uControllers_picocomdefault ", aka " picocom --baud 9600 --flow n /dev/ttyACM0 "
 # The codes themselves are the results of the RF caugh up by the Espruino, wich in turns gives us logs :D

--

 # R: if using googlecode's RCSwitch library, check the "ReceiveDemo_Simple" example sketch:
 #    it 'll display the received bits as hexa & also the protocol used
 
 ID: EFER ( 4 )
 
4/0 >> emulating Efergy remote: all off
4/1 >> emulating Efergy remote: 1 on
4/2 >> emulating Efergy remote: 1 off
4/3 >> emulating Efergy remote: 2 on
4/4 >> emulating Efergy remote: 2 off
4/5 >> emulating Efergy remote: 3 on
4/6 >> emulating Efergy remote: 3 off
4/7 >> emulating Efergy remote: 4 on
4/8 >> emulating Efergy remote: 4 off
                                                                                             ____
 ##############          ALL OFF  =>  Decimal: 8695384 (24bit) / Binary: 100001001010111001011000 ( <device_ID> binary 8 ) / protocol: 1 / PulseLength: 299
#              #                                                                             ____
#              #            1 ON  =>  Decimal: 8695391 (24bit) / Binary: 100001001010111001011111 ( <device_ID> binary 15 ) / protocol: 1 / PulseLength: 298
#  ALL         #                                                                             ____
#  OFF         #           1 OFF  =>  Decimal: 8695383 (24bit) / Binary: 100001001010111001010111 ( <device_ID> binary 7 ) / protocol: 1 / PulseLength: 299
#              #                                                                             ____
#              #            2 ON  =>  Decimal: 8695387 (24bit) / Binary: 100001001010111001011011 ( <device_ID> binary 11 ) / protocol: 1 / PulseLength: 299
#  ON  1  OFF  #                                                                             ____
#              #           2 OFF  =>  Decimal: 8695379 (24bit) / Binary: 100001001010111001010011 ( <device_ID> binary 3 ) / protocol: 1 / PulseLength: 299
#  ON  2  OFF  #                                                                             ____
#              #            3 ON  =>  Decimal: 8695389 (24bit) / Binary: 100001001010111001011101 ( <device_ID> binary 13 ) / protocol: 1 / PulseLength: 299
#  ON  3  OFF  #                                                                             ____
#              #           3 OFF  =>  Decimal: 8695381 (24bit) / Binary: 100001001010111001010101 ( <device_ID> binary 5 ) / protocol: 1 / PulseLength: 299
#  ON  4  OFF  #                                                                             ____
#              #            4 ON  =>  Decimal: 8695390 (24bit) / Binary: 100001001010111001011110 ( <device_ID> binary 14 ) / protocol: 1 / PulseLength: 299
#              #                                                                             ____
 ##############            4 OFF  =>  Decimal: 8695382 (24bit) / Binary: 100001001010111001010110 ( <device_ID> binary 6 ) / protocol: 1 / PulseLength: 299


--

 # Also, for the above "mapping" ( Decimal (bitlength), Binary & protocol ), alternative representations of the data is listed below
 #Â The following data was fetched using the "ReceiveDemo_Advanced" example sketch from the RCSwitch library
 
 ALL OFF:
 Decimal: 8695384 (24Bit) Binary: 100001001010111001011000 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9300,988,220,384,832,380,828,388,824,388,824,992,220,384,824,384,828,992,220,384,828,988,224,376,836,984,228,984,228,980,232,368,848,360,848,972,240,364,848,968,244,968,244,368,844,368,844,368,840,

  
    1 ON:
 Decimal: 8695391 (24Bit) Binary: 100001001010111001011111 Tri-State: not applicable PulseLength: 298 microseconds Protocol: 1
Raw data: 9312,976,236,368,844,368,844,364,844,368,844,976,236,368,840,372,840,976,236,368,844,972,236,368,844,976,236,972,236,976,236,368,848,356,852,968,244,360,852,964,244,968,232,976,236,976,236,972,236,
 
   1 OFF:
 Decimal: 8695383 (24Bit) Binary: 100001001010111001010111 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9304,988,224,380,828,380,832,380,832,380,832,984,232,372,836,376,832,980,232,376,812,1004,208,396,816,996,216,992,220,992,216,388,824,388,828,988,220,384,828,992,220,380,828,988,224,988,224,984,228,
 
    2 ON:
 Decimal: 8695387 (24Bit) Binary: 100001001010111001011011 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9308,984,228,376,832,380,832,380,832,380,828,988,224,380,832,376,836,980,232,372,836,980,232,372,840,980,232,976,236,976,220,388,828,384,824,988,224,384,824,988,224,988,224,380,832,984,228,980,232,
 
   2 OFF:
 Decimal: 8695379 (24Bit) Binary: 100001001010111001010011 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9308,988,224,380,832,376,836,376,832,380,812,1000,212,396,816,392,820,1000,212,388,820,1008,208,388,820,1000,212,996,216,992,220,384,828,384,824,992,224,380,828,984,228,384,828,380,828,988,228,980,232,
 
    3 ON:
 Decimal: 8695389 (24Bit) Binary: 100001001010111001011101 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9300,996,220,384,808,400,812,396,816,400,808,1004,208,404,808,404,808,1004,208,396,816,996,212,392,820,996,216,992,224,988,220,392,820,396,812,1000,212,396,816,1000,212,992,220,992,220,384,828,988,224,
 
   3 OFF:
 Decimal: 8695381 (24Bit) Binary: 100001001010111001010101 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9312,984,228,376,832,376,840,376,836,372,836,980,232,376,836,372,836,980,232,376,836,984,228,376,836,976,232,980,236,976,236,368,840,372,840,968,244,360,852,972,240,364,848,968,244,360,828,984,228,
 
    4 ON:
 Decimal: 8695390 (24Bit) Binary: 100001001010111001011110 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9312,984,228,376,832,380,836,372,836,380,832,984,228,380,828,384,832,980,228,380,832,500,204,392,820,1000,212,996,220,988,220,380,832,380,832,984,228,384,828,992,220,980,232,984,228,980,232,376,836,
 
   4 OFF:
 Decimal: 8695382 (24Bit) Binary: 100001001010111001010110 Tri-State: not applicable PulseLength: 299 microseconds Protocol: 1
Raw data: 9308,988,224,384,828,384,824,388,828,380,828,988,224,384,828,380,832,988,220,384,832,984,224,380,832,988,224,984,228,976,240,364,844,372,840,972,240,368,844,976,236,368,844,972,240,972,240,364,848,



/* -- // SUMMARY // -- */

REF///////////////////*****
0b1000010010101110010110000 -> [ALL] OFF: ...1000(0)  => 1000
0b1000010010101110010111110 -> [1]   ON:  ...1111(0)  => 1111
0b1000010010101110010101110 -> [1]   OFF: ...0111(0)  => 0111
0b1000010010101110010110110 -> [2]   ON:  ...1011(0)  => 1011
0b1000010010101110010100110 -> [2]   OFF: ...0011(0)  => 0011
0b1000010010101110010111010 -> [3]   ON:  ...1101(0)  => 1101
0b1000010010101110010101010 -> [3]   OFF: ...0101(0)  => 0101
0b1000010010101110010111100 -> [4]   ON:  ...1110(0)  => 1110
0b1000010010101110010101100 -> [4]   OFF: ...0110(0)  => 0110

aka
                      _____
0b1000010010101110010110000
// ALL OFF: 10000
                      _____
0b1000010010101110010111110
// 1   ON:  11110
                      _____
0b1000010010101110010101110
// 1   OFF: 01110
                      _____
0b1000010010101110010110110
// 2   ON:  10110
                      _____
0b1000010010101110010100110
// 2   OFF: 00110
                      _____
0b1000010010101110010111010
// 3   ON:  11010
                      _____
0b1000010010101110010101010
// 3   OFF: 01010
                      _____
0b1000010010101110010111100
// 4   ON:  11100
                      _____
0b1000010010101110010101100
// 4   OFF: 01100




/* -- // DEBUG DATA // -- */

// ALL OFF

0b1000010010101110010110000
0b1000010010101110010110000
0b1000010010101110010110000
0b1000010010101110010110000
0b1000010010101110010110000
0b1000010010101110010110000
0b100001001010111001010
0b10

// 1 ON

0b1000010010101110010111110
0b1000010010101110010111110
0b1000010010101110010111110
0b1000010010101110010111110
0b1000010010101110010111110
0b1000010010101110010111110

// 1 OFF

0b1000010010101110010101110
0b1000010010101110010101110
0b1000010010101110010101110
0b1000010010101110010101110
0b1000010010101110010101110
0b1000010010101110010101110
0b10000100101011101111
0b100001001010111001111
0b100001

// 2 ON

0b1000010010101110010110110
0b1000010010101110010110110
0b1000010010101110010110110
0b1000010010101110010110110
0b1000010010101110010110110
0b1000010010101110010110110
0b10000100101011100101111
0b10000100101011111
0b10000100101011111
0b1000010010101110

// 2 OFF

0b1000010010101110010100110
0b1000010010101110010100110
0b1000010010101110010100110
0b1000010010101110010100110
0b1000010010101110010100110
0b1000010010101110010100110
0b1000010010101110010111
0b10000100101011111
0b1
0b1000010010101111111
0b111
0b11
0b11
0b11
0b101111
0b11

// 3 ON

0b1000010010101110010111010
0b1000010010101110010111010
0b1000010010101110010111010
0b1000010010101110010111010
0b1000010010101110010111010
0b1000010010101110010111010
0b11
0b100001001010111111
0b11
0b1
0b11

// 3 OFF

0b100001
0b1000010010101110010101010
0b1000010010101110010101010
0b1000010010101110010101010
0b1000010010101110010101010
0b1000010010101110010101010
0b1000010010101110010101010
0b10000100101011100101111
0b100001001010111111
0b100001001010111111
0b10000100101011101111
0b1000010010101110111111
0b100001001010111011111
0b10000100

// 4 ON

0b1000010
0b1000010010101110010111100
0b1000010010101110010111100
0b1000010010101110010111100
0b1000010010101110010111100
0b1000010010101110010111100
0b1000010010101110010111100
0b10
0b10
0b1

// 4 OFF

0b10000
0b1000010010101110010101100
0b1000010010101110010101100
0b1000010010101110010101100
0b1000010010101110010101100
0b1000010010101110010101100
0b1000010010101110010101100
0b1000010010101110111
0b10000100101011100111
0b1000010010101110111
